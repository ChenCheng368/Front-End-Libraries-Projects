//debugging notes
//name if react component, first letter must be capital case.

//----------------------------HTML-------------------------------
<script src="https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js"></script>


<div id="app"></div>


//----------------------------CSS---------------------------------
.container{
  width: 40%;
  height:50%;
  //top:50px
  margin: 20px;  
  background-color: lighten(grey, 30%);
  //position: relative;//?
  outline: 5px solid orange;
  //justify-self: center;
//justify-items: center;
}

.drum-container{
  display: inline-block;
  width:50%;
  //outline: 3px solid blue;
}

.control-container{
  display: inline-block;
  width:40%;
  vertical-align: top;
  margin: 0px 0px 0 30px;
 // outline: 5px solid blue;
}

.drum-pad{
  font-size: 30px;
  margin: 20px 0px 0px 20px;
  cursor: pointer;
  text-align: center;
  width: 60px;
  height: 40px;
  border-radius: 5px;
  background-color:gray;
  //box-shadow: 3px 3px 5px black;
}

#pad-bank{
  display: grid;
  width:80%;
  height:230px; 
  //grid-column-gap: 0px;
  //grid-row-gap: 0px;
  grid-template-columns: auto auto auto;
  //grid-template-rows: auto auto auto;
  //outline: 3px solid green;
}

.power-select-box{
  margin: 10px 0px 10px 10px;
  border: 1px solid black;
  width: 50px;
  height: 20px;
  padding: 1px;
  background-color: black;
}

.power-select-box-inner{
  width: 23px;
  height: 19px;
  background: #8cc120;
  border: 1px solid black;
  box-sizing: border-box;
  cursor: pointer;
}

.bank-select-box{
  margin: 10px 0px 10px 10px;
  border: 1px solid black;
  width: 50px;
  height: 20px;
  padding: 1px;
  background-color: black;
}

.bank-select-box-inner{
  width: 23px;
  height: 19px;
  background: #8cc120;
  border: 1px solid black;
  box-sizing: border-box;
  cursor: pointer;
}





#displayed{
  //top: 5px;
  //right: 10px;
  margin: 10px 0px 10px 10px;
  //border: 2px solid black;
  width: 150px;
  height: 35px;
  background-color:gray;
 // grid-row: 2;
 // grid-column: 2 / 3;
//display: inline-block;
    //margin: 0px 0px 0 400px;
    //vertical-align: top;
  //outline: 3px solid yellow;
}



//---------------------------------reactJs---------------------------------------
const bankOne=[
  {
    keyName:'Q',
    keyCode:81,
    clipName:'Heater-1',
    src:'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'
  },
  {
    keyName:'W',
    keyCode:87,
    clipName:'Heater-2',
    src:'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'
  }
  ,
  {
    keyName:'E',
    keyCode:69,
    clipName:'Heater-3',
    src:'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'
  }
  ,
  {
    keyName:'A',
    keyCode:65,
    clipName:'Heater-4',
    src:'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'
  }
  ,
  {
    keyName:'S',
    keyCode:83,
    clipName:'Clap',
    src:'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'
  }
  ,
  {
    keyName:'D',
    keyCode:68,
    clipName:'Open-HH',
    src:'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'
  }
  ,
  {
    keyName:'Z',
    keyCode:90,
    clipName:"Kick-n'-Hat",
    src:'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'
  }
  ,
  {
    keyName:'X',
    keyCode:88,
    clipName:'Kick',
    src:'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'
  }
  ,
  {
    keyName:'C',
    keyCode:67,
    clipName:'Closed-HH',
    src:'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'
  }
]

const bankTwo = [{
  keyCode: 81,
  keyName: 'Q',
  clipName: 'Chord-1',
  src: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'
}, {
  keyCode: 87,
  keyName: 'W',
  clipName: 'Chord-2',
  src: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'
}, {
  keyCode: 69,
  keyName: 'E',
  clipName: 'Chord-3',
  src: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'
}, {
  keyCode: 65,
  keyName: 'A',
  clipName: 'Shaker',
  src: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'
}, {
  keyCode: 83,
  keyName: 'S',
  clipName: 'Open-HH',
  src: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'
}, {
  keyCode: 68,
  keyName: 'D',
  clipName: 'Closed-HH',
  src: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'
}, {
  keyCode: 90,
  keyName: 'Z',
  clipName: 'Punchy-Kick',
  src: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'
}, {
  keyCode: 88,
  keyName: 'X',
  clipName: 'Side-Stick',
  src: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'
}, {
  keyCode: 67,
  keyName: 'C',
  clipName: 'Snare',
  src: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'
}];

class DrumPad extends React.Component{//props contain all elems in 1 object in array
  constructor(props) {
    super(props);
    this.state = {
      padStyle:{boxShadow: "3px 3px 5px black"}
    };
  this.playSound = this.playSound.bind(this);
  this.handleKeyPress =this.handleKeyPress.bind(this);
    this.setActivePad=this.setActivePad.bind(this);
    this.setInactivePad=this.setInactivePad.bind(this);
  }

//press key to play sound
  componentDidMount() {
    document.addEventListener('keydown', this.handleKeyPress);
  }
  componentWillUnmount() {
    document.removeEventListener('keydown', this.handleKeyPress);
  }
  handleKeyPress(e) {
    if (e.keyCode === this.props.keyCode) {
      this.playSound();
    }
  }
  
  setActivePad(){
    this.setState(
    {
      padStyle: {boxShadow: "0 0 black"}
    });
  }
  setInactivePad(){
    this.setState(
    {
      padStyle:{boxShadow: "3px 3px 5px black"}
    });
  }
//click button to play sound
playSound() { 
   const sound = document.getElementById(this.props.keyName);
   sound.play();
   sound.volume = this.props.volumeVal;
  
  //update pad style
  this.setActivePad();
  setTimeout(() => this.setInactivePad(), 200);
  
  this.props.updateDisplayedName(this.props.clipName);
  }
  
  render(){
    if(this.props.power==='on'){
        return(      
            <div className="drum-pad" style={this.state.padStyle} id={this.props.clipName} onClick={this.playSound}>{this.props.keyName}
            <audio className='clip' id={this.props.keyName} src={this.props.src}></audio>
            </div>  
        );    
    }
    
    else{
      return(      
            <div className="drum-pad" style={this.state.padStyle} id={this.props.clipName}>
                {this.props.keyName}
            </div>  
        );  
    }
    
  }
}

class DrumMachine extends React.Component {
  constructor (props) {
    super(props);
    this.state = {
      bank: bankOne,
      displayedName:"",
      power:"on",
      volumeVal:0.3
    };
    
    this.setDisplayedName=this.setDisplayedName.bind(this);
    this.controlPower=this.controlPower.bind(this);
    this.controlBank=this.controlBank.bind(this);
    this.changeVolume=this.changeVolume.bind(this);
  }
  
  setDisplayedName(name){
    this.setState(
    {
      displayedName:name
    });
    
  }
  
  controlPower(){
    if(this.state.power==='on'){
      this.setState(
      {
        power:'off',
displayedName:""
      });
    }
    
    else{
      this.setState(
      {
        power:'on'

      });
    }
  }
  
  controlBank(){
    if(this.state.bank==bankOne){
      this.setState(
      {
        bank:bankTwo
      });
    }
    
    else{
      this.setState(
      {
        bank:bankOne
      });
    }
  }
  
  changeVolume(e){
    this.setState({
      volumeVal: e.target.value
    });
    
  }
  
  render () {
    const powerStyle= this.state.power==='on'? {float: 'right'}:{float: 'left'};
    const bankStyle= this.state.bank==bankOne? {float: 'left'}:{float: 'right'};
    const bankLabel= this.state.bank==bankOne? 'bank 1':'bank 2';
    
    let padBank=this.state.bank.map ( (obj)=>{
      return (    
          <DrumPad keyName={obj.keyName} keyCode={obj.keyCode} clipName={obj.clipName} src={obj.src} updateDisplayedName={this.setDisplayedName} power={this.state.power} volumeVal={this.state.volumeVal}/>  
    )    
    });       
                                     
    return (
    <div id="drum-machine">
      <div id="display" class="container" >
        
        <div className='drum-container'>
          <div id='pad-bank'> 
            {padBank}
          </div>
        </div>
             
        <div className='control-container'>
          <p>Power: {this.state.power}</p>
          <div onClick={this.controlPower} className="power-select-box">
              <div style={powerStyle} className="power-select-box-inner" />
          </div>

          <div id='displayed' style={{color: "blue", fontSize: 26}}>
            {this.state.displayedName}  
          </div>

          <div className="volume-slider">
              <input type="range" min="0" max="1" step="0.01" value={this.state.volumeVal} onChange={this.changeVolume} />
          </div>

          <p>Bank: {bankLabel}</p>
          <div onClick={this.controlBank} className="bank-select-box">
          <div style={bankStyle} className="bank-select-box-inner" />
          </div>
        </div>
        
      </div>           
   </div>
    )
  }
    
}

ReactDOM.render(<DrumMachine />, document.getElementById("app"));
